{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Slim Shady\\\\Desktop\\\\project-x\\\\client\\\\src\\\\layouts\\\\page\\\\order.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TextField from \"../../forms/textField\";\nimport validatorConfig from \"../../utils/validatorConfig\";\nimport { validator } from \"../../utils/validator\";\nimport RadioField from \"../../forms/radioField\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport orderService from \"../../services/orders.service\";\nimport writingDataToDb from \"../../functions/writingDataToDb\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Order = () => {\n  _s();\n  const history = useHistory();\n  const [dataFromBascet, setDataFromBascet] = useState();\n  const [data, setData] = useState({\n    numtel: \"\",\n    fio: \"\",\n    sity: \"\",\n    address: \"\",\n    post: \"СДЭК\"\n  });\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    validate();\n    orderService.getBascetPurchases().then(res => {\n      const toFormat = Object.keys(res).map(item => res[item]);\n      setDataFromBascet(toFormat);\n    }).catch(error => error.message);\n  }, [data]);\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const isValid = Object.keys(errors).length === 0;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    try {\n      await writingDataToDb(data, dataFromBascet);\n    } catch (error) {\n      console.log(error.message);\n    }\n    toast.success(\"Спасибо за покупку в нашем магазине,ваш заказ оформлен ожидайте обратной связи\");\n    history.push(\"/\");\n    await orderService.refreshBascetAfterBuying();\n    setTimeout(() => {\n      window.location.reload();\n    }, 3000);\n  };\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setData(prevState => ({\n      ...prevState,\n      [target.name]: target.value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3 shadow p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-5\",\n          children: \"Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            name: \"fio\",\n            type: \"text\",\n            label: \"\\u0424\\u0418\\u041E\",\n            value: data.fio,\n            onChange: handleChange,\n            error: errors.fio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"numtel\",\n            type: \"text\",\n            label: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n            value: data.numtel,\n            onChange: handleChange,\n            error: errors.numtel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"sity\",\n            type: \"text\",\n            label: \"\\u0413\\u043E\\u0440\\u043E\\u0434\",\n            value: data.sity,\n            onChange: handleChange,\n            error: errors.sity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"address\",\n            type: \"text\",\n            label: \"\\u0422\\u043E\\u0447\\u043D\\u044B\\u0439 \\u0410\\u0434\\u0440\\u0435\\u0441\",\n            value: data.address,\n            onChange: handleChange,\n            error: errors.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioField, {\n            options: [{\n              name: \"СДЭК\",\n              value: \"СДЭК\"\n            }, {\n              name: \"ПочтаРоссии\",\n              value: \"ПочтаРоссии\"\n            }, {\n              name: \"DHL\",\n              value: \"DHL\"\n            }],\n            value: data.post,\n            name: \"post\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary w-100 mx-auto\",\n            disabled: !isValid,\n            children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Order, \"+mYM7YZLlhIoejeP/vU4H1JyFmY=\", false, function () {\n  return [useHistory];\n});\n_c = Order;\nexport default Order;\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["React","useState","useEffect","TextField","validatorConfig","validator","RadioField","toast","useHistory","orderService","writingDataToDb","Order","history","dataFromBascet","setDataFromBascet","data","setData","numtel","fio","sity","address","post","errors","setErrors","validate","getBascetPurchases","then","res","toFormat","Object","keys","map","item","catch","error","message","length","isValid","handleSubmit","e","preventDefault","console","log","success","push","refreshBascetAfterBuying","setTimeout","window","location","reload","handleChange","target","prevState","name","value"],"sources":["C:/Users/Slim Shady/Desktop/project-x/client/src/layouts/page/order.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TextField from \"../../forms/textField\";\r\nimport validatorConfig from \"../../utils/validatorConfig\";\r\nimport { validator } from \"../../utils/validator\";\r\nimport RadioField from \"../../forms/radioField\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport orderService from \"../../services/orders.service\";\r\nimport writingDataToDb from \"../../functions/writingDataToDb\";\r\n\r\nconst Order = () => {\r\n  const history = useHistory();\r\n  const [dataFromBascet, setDataFromBascet] = useState();\r\n  const [data, setData] = useState({\r\n    numtel: \"\",\r\n    fio: \"\",\r\n    sity: \"\",\r\n    address: \"\",\r\n    post: \"СДЭК\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    validate();\r\n    orderService\r\n      .getBascetPurchases()\r\n      .then((res) => {\r\n        const toFormat = Object.keys(res).map((item) => res[item]);\r\n        setDataFromBascet(toFormat);\r\n      })\r\n      .catch((error) => error.message);\r\n  }, [data]);\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    try {\r\n      await writingDataToDb(data, dataFromBascet);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n    toast.success(\r\n      \"Спасибо за покупку в нашем магазине,ваш заказ оформлен ожидайте обратной связи\"\r\n    );\r\n\r\n    history.push(\"/\");\r\n    await orderService.refreshBascetAfterBuying();\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 3000);\r\n  };\r\n  const handleChange = ({ target }) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n          <h2 className=\"mb-5\">Order</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              name=\"fio\"\r\n              type=\"text\"\r\n              label=\"ФИО\"\r\n              value={data.fio}\r\n              onChange={handleChange}\r\n              error={errors.fio}\r\n            />\r\n            <TextField\r\n              name=\"numtel\"\r\n              type=\"text\"\r\n              label=\"Номер телефона\"\r\n              value={data.numtel}\r\n              onChange={handleChange}\r\n              error={errors.numtel}\r\n            />\r\n            <TextField\r\n              name=\"sity\"\r\n              type=\"text\"\r\n              label=\"Город\"\r\n              value={data.sity}\r\n              onChange={handleChange}\r\n              error={errors.sity}\r\n            />\r\n            <TextField\r\n              name=\"address\"\r\n              type=\"text\"\r\n              label=\"Точный Адрес\"\r\n              value={data.address}\r\n              onChange={handleChange}\r\n              error={errors.address}\r\n            />\r\n            <RadioField\r\n              options={[\r\n                { name: \"СДЭК\", value: \"СДЭК\" },\r\n                { name: \"ПочтаРоссии\", value: \"ПочтаРоссии\" },\r\n                { name: \"DHL\", value: \"DHL\" },\r\n              ]}\r\n              value={data.post}\r\n              name=\"post\"\r\n              onChange={handleChange}\r\n            />\r\n            <button\r\n              className=\"btn btn-primary w-100 mx-auto\"\r\n              disabled={!isValid}\r\n            >\r\n              Отправить\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}