{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport authService from \"../services/auth.service\";\nimport localStorageService from \"../services/localStorage.service\";\nimport userService from \"../services/user.service\";\nimport { toast } from \"react-toastify\";\nconst userSlice = createSlice({\n  name: \"users\",\n  initialState: {\n    entities: null,\n    isLoading: true,\n    error: null,\n    auth: null\n  },\n  reducers: {\n    usersRequested: state => {\n      state.isLoading = true;\n    },\n    usersReceved: (state, action) => {\n      state.entities = action.payload;\n      state.isLoading = false;\n      state.auth = true;\n    },\n    usersRequestFiled: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    },\n    authRequested: state => {\n      state.error = null;\n    },\n    userLogOut: state => {\n      state.entities = null;\n      state.auth = null;\n    }\n  }\n});\nconst {\n  reducer: usersReducer,\n  actions\n} = userSlice;\nconst {\n  usersRequested,\n  usersReceved,\n  usersRequestFiled,\n  userLogOut\n} = actions;\nexport default usersReducer;\nexport const loadUsersList = () => async dispatch => {\n  dispatch(usersRequested());\n  try {\n    const data = await userService.getCurrentUser();\n    dispatch(usersReceved(data));\n  } catch (error) {\n    dispatch(usersRequestFiled(error.message));\n  }\n};\nexport const signUp = _ref => {\n  let {\n    email,\n    password,\n    fio\n  } = _ref;\n  return async dispatch => {\n    dispatch(usersRequested());\n    try {\n      const {\n        data\n      } = await authService.signUp({\n        email,\n        password\n      });\n      localStorageService.setTokens(data);\n      dispatch(usersReceved({\n        userId: data.localId\n      }));\n      await userService.create({\n        _id: data.localId,\n        email,\n        fio,\n        balance: 10000\n      });\n      window.location.reload();\n    } catch (error) {\n      dispatch(usersRequestFiled(error.message));\n      if (error.response.data.error.message === \"EMAIL_EXISTS\") {\n        return toast.error(\"Даннйы пользователь зарегестрирован\");\n      }\n      if (error.response.data.error.message === \"TOO_MANY_ATTEMPTS_TRY_LATER\") {\n        return toast.error(\"Вы сделали много попыток ,попробуйте позже\");\n      }\n    }\n  };\n};\nexport const logIn = _ref2 => {\n  let {\n    email,\n    password\n  } = _ref2;\n  return async dispatch => {\n    dispatch(usersRequested());\n    try {\n      const {\n        data\n      } = await authService.logIn({\n        email,\n        password\n      });\n      localStorageService.setTokens(data);\n      dispatch(usersReceved({\n        userId: data.localId,\n        balance: 10000\n      }));\n      window.location.reload();\n    } catch (error) {\n      if (error.response.data.error.message === \"EMAIL_NOT_FOUND\") {\n        return toast.error(\"Такого email нет\");\n      }\n      if (error.response.data.error.message === \"INVALID_PASSWORD\") {\n        return toast.error(\"Вы вели неверный пароль\");\n      }\n      if (error.response.data.error.message === \"TOO_MANY_ATTEMPTS_TRY_LATER\") {\n        return toast.error(\"Вы сделали много попыток ,попробуйте позже\");\n      }\n      dispatch(usersRequestFiled(error.message));\n    }\n  };\n};\nexport const logOut = () => dispatch => {\n  localStorageService.authRemoveData();\n  dispatch(userLogOut());\n};\nexport const getCurrentUsers = () => state => state.users.entities;\nexport const getErrors = () => state => state.users.error;","map":{"version":3,"names":["createSlice","authService","localStorageService","userService","toast","userSlice","name","initialState","entities","isLoading","error","auth","reducers","usersRequested","state","usersReceved","action","payload","usersRequestFiled","authRequested","userLogOut","reducer","usersReducer","actions","loadUsersList","dispatch","data","getCurrentUser","message","signUp","email","password","fio","setTokens","userId","localId","create","_id","balance","window","location","reload","response","logIn","logOut","authRemoveData","getCurrentUsers","users","getErrors"],"sources":["C:/Users/Slim Shady/Desktop/project-x/client/src/store/users.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport authService from \"../services/auth.service\";\r\nimport localStorageService from \"../services/localStorage.service\";\r\nimport userService from \"../services/user.service\";\r\nimport { toast } from \"react-toastify\";\r\nconst userSlice = createSlice({\r\n  name: \"users\",\r\n  initialState: {\r\n    entities: null,\r\n    isLoading: true,\r\n    error: null,\r\n    auth: null,\r\n  },\r\n  reducers: {\r\n    usersRequested: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    usersReceved: (state, action) => {\r\n      state.entities = action.payload;\r\n      state.isLoading = false;\r\n      state.auth = true;\r\n    },\r\n    usersRequestFiled: (state, action) => {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    authRequested: (state) => {\r\n      state.error = null;\r\n    },\r\n    userLogOut: (state) => {\r\n      state.entities = null;\r\n      state.auth = null;\r\n    },\r\n  },\r\n});\r\n\r\nconst { reducer: usersReducer, actions } = userSlice;\r\nconst { usersRequested, usersReceved, usersRequestFiled, userLogOut } = actions;\r\nexport default usersReducer;\r\n\r\nexport const loadUsersList = () => async (dispatch) => {\r\n  dispatch(usersRequested());\r\n  try {\r\n    const data = await userService.getCurrentUser();\r\n    dispatch(usersReceved(data));\r\n  } catch (error) {\r\n    dispatch(usersRequestFiled(error.message));\r\n  }\r\n};\r\n\r\nexport const signUp =\r\n  ({ email, password, fio }) =>\r\n  async (dispatch) => {\r\n    dispatch(usersRequested());\r\n    try {\r\n      const { data } = await authService.signUp({ email, password });\r\n      localStorageService.setTokens(data);\r\n      dispatch(usersReceved({ userId: data.localId }));\r\n      await userService.create({\r\n        _id: data.localId,\r\n        email,\r\n        fio,\r\n        balance: 10000,\r\n      });\r\n      window.location.reload();\r\n    } catch (error) {\r\n      dispatch(usersRequestFiled(error.message));\r\n      if (error.response.data.error.message === \"EMAIL_EXISTS\") {\r\n        return toast.error(\"Даннйы пользователь зарегестрирован\");\r\n      }\r\n      if (error.response.data.error.message === \"TOO_MANY_ATTEMPTS_TRY_LATER\") {\r\n        return toast.error(\"Вы сделали много попыток ,попробуйте позже\");\r\n      }\r\n    }\r\n  };\r\n\r\nexport const logIn =\r\n  ({ email, password }) =>\r\n  async (dispatch) => {\r\n    dispatch(usersRequested());\r\n    try {\r\n      const { data } = await authService.logIn({ email, password });\r\n      localStorageService.setTokens(data);\r\n      dispatch(usersReceved({ userId: data.localId, balance: 10000 }));\r\n      window.location.reload();\r\n    } catch (error) {\r\n      if (error.response.data.error.message === \"EMAIL_NOT_FOUND\") {\r\n        return toast.error(\"Такого email нет\");\r\n      }\r\n      if (error.response.data.error.message === \"INVALID_PASSWORD\") {\r\n        return toast.error(\"Вы вели неверный пароль\");\r\n      }\r\n\r\n      if (error.response.data.error.message === \"TOO_MANY_ATTEMPTS_TRY_LATER\") {\r\n        return toast.error(\"Вы сделали много попыток ,попробуйте позже\");\r\n      }\r\n      dispatch(usersRequestFiled(error.message));\r\n    }\r\n  };\r\n\r\nexport const logOut = () => (dispatch) => {\r\n  localStorageService.authRemoveData();\r\n  dispatch(userLogOut());\r\n};\r\n\r\nexport const getCurrentUsers = () => (state) => state.users.entities;\r\nexport const getErrors = () => (state) => state.users.error;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}