{"ast":null,"code":"const TOKEN_KEY = \"jwt-token\";\nconst REFRESH_TOKEN = \"jwt-refresh-token\";\nconst EXPIRES_KEY = \"jwt-expires\";\nconst USERID_KEY = \"user-local-id\";\nexport function setTokens(_ref) {\n  let {\n    refreshToken,\n    idToken,\n    localId,\n    expiresIn = 3600\n  } = _ref;\n  const expiresDate = new Date().getTime() + expiresIn * 1000;\n  localStorage.setItem(USERID_KEY, localId);\n  localStorage.setItem(TOKEN_KEY, idToken);\n  localStorage.setItem(REFRESH_TOKEN, refreshToken);\n  localStorage.setItem(EXPIRES_KEY, expiresDate);\n}\nexport function authRemoveData() {\n  localStorage.removeItem(USERID_KEY);\n  localStorage.removeItem(TOKEN_KEY);\n  localStorage.removeItem(REFRESH_TOKEN);\n  localStorage.removeItem(EXPIRES_KEY);\n}\nexport function getAccesToken() {\n  return localStorage.getItem(TOKEN_KEY);\n}\nexport function getRefrestTokent() {\n  return localStorage.getItem(REFRESH_TOKEN);\n}\nexport function getTokenExpiresDate() {\n  return localStorage.getItem(EXPIRES_KEY);\n}\nexport function getUserId() {\n  return localStorage.getItem(USERID_KEY);\n}\nconst localStorageService = {\n  setTokens,\n  getAccesToken,\n  getRefrestTokent,\n  getTokenExpiresDate,\n  getUserId,\n  authRemoveData\n};\nexport default localStorageService;","map":{"version":3,"names":["TOKEN_KEY","REFRESH_TOKEN","EXPIRES_KEY","USERID_KEY","setTokens","refreshToken","idToken","localId","expiresIn","expiresDate","Date","getTime","localStorage","setItem","authRemoveData","removeItem","getAccesToken","getItem","getRefrestTokent","getTokenExpiresDate","getUserId","localStorageService"],"sources":["C:/Users/Slim Shady/Desktop/project-x/client/src/services/localStorage.service.js"],"sourcesContent":["const TOKEN_KEY = \"jwt-token\";\r\nconst REFRESH_TOKEN = \"jwt-refresh-token\";\r\nconst EXPIRES_KEY = \"jwt-expires\";\r\nconst USERID_KEY = \"user-local-id\";\r\n\r\nexport function setTokens({\r\n  refreshToken,\r\n  idToken,\r\n  localId,\r\n  expiresIn = 3600,\r\n}) {\r\n  const expiresDate = new Date().getTime() + expiresIn * 1000;\r\n  localStorage.setItem(USERID_KEY, localId);\r\n  localStorage.setItem(TOKEN_KEY, idToken);\r\n  localStorage.setItem(REFRESH_TOKEN, refreshToken);\r\n  localStorage.setItem(EXPIRES_KEY, expiresDate);\r\n}\r\n\r\nexport function authRemoveData() {\r\n  localStorage.removeItem(USERID_KEY);\r\n  localStorage.removeItem(TOKEN_KEY);\r\n  localStorage.removeItem(REFRESH_TOKEN);\r\n  localStorage.removeItem(EXPIRES_KEY);\r\n}\r\n\r\nexport function getAccesToken() {\r\n  return localStorage.getItem(TOKEN_KEY);\r\n}\r\nexport function getRefrestTokent() {\r\n  return localStorage.getItem(REFRESH_TOKEN);\r\n}\r\n\r\nexport function getTokenExpiresDate() {\r\n  return localStorage.getItem(EXPIRES_KEY);\r\n}\r\n\r\nexport function getUserId() {\r\n  return localStorage.getItem(USERID_KEY);\r\n}\r\n\r\nconst localStorageService = {\r\n  setTokens,\r\n  getAccesToken,\r\n  getRefrestTokent,\r\n  getTokenExpiresDate,\r\n  getUserId,\r\n  authRemoveData,\r\n};\r\nexport default localStorageService;\r\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,WAAW;AAC7B,MAAMC,aAAa,GAAG,mBAAmB;AACzC,MAAMC,WAAW,GAAG,aAAa;AACjC,MAAMC,UAAU,GAAG,eAAe;AAElC,OAAO,SAASC,SAAS,OAKtB;EAAA,IALuB;IACxBC,YAAY;IACZC,OAAO;IACPC,OAAO;IACPC,SAAS,GAAG;EACd,CAAC;EACC,MAAMC,WAAW,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,GAAGH,SAAS,GAAG,IAAI;EAC3DI,YAAY,CAACC,OAAO,CAACV,UAAU,EAAEI,OAAO,CAAC;EACzCK,YAAY,CAACC,OAAO,CAACb,SAAS,EAAEM,OAAO,CAAC;EACxCM,YAAY,CAACC,OAAO,CAACZ,aAAa,EAAEI,YAAY,CAAC;EACjDO,YAAY,CAACC,OAAO,CAACX,WAAW,EAAEO,WAAW,CAAC;AAChD;AAEA,OAAO,SAASK,cAAc,GAAG;EAC/BF,YAAY,CAACG,UAAU,CAACZ,UAAU,CAAC;EACnCS,YAAY,CAACG,UAAU,CAACf,SAAS,CAAC;EAClCY,YAAY,CAACG,UAAU,CAACd,aAAa,CAAC;EACtCW,YAAY,CAACG,UAAU,CAACb,WAAW,CAAC;AACtC;AAEA,OAAO,SAASc,aAAa,GAAG;EAC9B,OAAOJ,YAAY,CAACK,OAAO,CAACjB,SAAS,CAAC;AACxC;AACA,OAAO,SAASkB,gBAAgB,GAAG;EACjC,OAAON,YAAY,CAACK,OAAO,CAAChB,aAAa,CAAC;AAC5C;AAEA,OAAO,SAASkB,mBAAmB,GAAG;EACpC,OAAOP,YAAY,CAACK,OAAO,CAACf,WAAW,CAAC;AAC1C;AAEA,OAAO,SAASkB,SAAS,GAAG;EAC1B,OAAOR,YAAY,CAACK,OAAO,CAACd,UAAU,CAAC;AACzC;AAEA,MAAMkB,mBAAmB,GAAG;EAC1BjB,SAAS;EACTY,aAAa;EACbE,gBAAgB;EAChBC,mBAAmB;EACnBC,SAAS;EACTN;AACF,CAAC;AACD,eAAeO,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}