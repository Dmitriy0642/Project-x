{"ast":null,"code":"import orderService from \"../services/orders.service\";\nimport productSerivce from \"../services/product.service\";\nimport decrementPurchased from \"./decrementPurchased\";\nconst writingDataToDb = async (dataForm, dataFromBascet) => {\n  const dataFromPurchased = await dataFromBascet.map(item => {\n    orderService.getPurchasedProdQuantity(item).then(res => {\n      const quantityFromPurchased = res;\n      if (quantityFromPurchased === null || quantityFromPurchased === undefined) {\n        orderService.create(dataForm);\n        decrementPurchased(item, item.quantity);\n        orderService.createPurchasedProd(item);\n        productSerivce.addSalesProduct(item);\n      } else if (quantityFromPurchased !== null || quantityFromPurchased !== undefined) {\n        orderService.create(dataForm);\n        decrementPurchased(item, item.quantity);\n        const newQuantity = item.quantity.map((j, index) => {\n          if (quantityFromPurchased[index].value > 0) {\n            return {\n              ...j,\n              value: quantityFromPurchased[index].value += j.value\n            };\n          }\n          return j;\n        });\n        const newData = {\n          category: item.category,\n          firm: item.firm,\n          img: [...item.img],\n          name: item.name,\n          price: item.price,\n          quantity: newQuantity,\n          _id: item._id\n        };\n        orderService.createPurchasedProd(newData);\n        productSerivce.addSalesProduct(newData);\n      }\n    });\n  });\n};\nexport default writingDataToDb;","map":{"version":3,"names":["orderService","productSerivce","decrementPurchased","writingDataToDb","dataForm","dataFromBascet","dataFromPurchased","map","item","getPurchasedProdQuantity","then","res","quantityFromPurchased","undefined","create","quantity","createPurchasedProd","addSalesProduct","newQuantity","j","index","value","newData","category","firm","img","name","price","_id"],"sources":["C:/Users/Slim Shady/Desktop/project-x/client/src/functions/writingDataToDb.js"],"sourcesContent":["import orderService from \"../services/orders.service\";\r\nimport productSerivce from \"../services/product.service\";\r\nimport decrementPurchased from \"./decrementPurchased\";\r\nconst writingDataToDb = async (dataForm, dataFromBascet) => {\r\n  const dataFromPurchased = await dataFromBascet.map((item) => {\r\n    orderService.getPurchasedProdQuantity(item).then((res) => {\r\n      const quantityFromPurchased = res;\r\n      if (\r\n        quantityFromPurchased === null ||\r\n        quantityFromPurchased === undefined\r\n      ) {\r\n        orderService.create(dataForm);\r\n        decrementPurchased(item, item.quantity);\r\n        orderService.createPurchasedProd(item);\r\n        productSerivce.addSalesProduct(item);\r\n      } else if (\r\n        quantityFromPurchased !== null ||\r\n        quantityFromPurchased !== undefined\r\n      ) {\r\n        orderService.create(dataForm);\r\n        decrementPurchased(item, item.quantity);\r\n        const newQuantity = item.quantity.map((j, index) => {\r\n          if (quantityFromPurchased[index].value > 0) {\r\n            return {\r\n              ...j,\r\n              value: (quantityFromPurchased[index].value += j.value),\r\n            };\r\n          }\r\n          return j;\r\n        });\r\n\r\n        const newData = {\r\n          category: item.category,\r\n          firm: item.firm,\r\n          img: [...item.img],\r\n          name: item.name,\r\n          price: item.price,\r\n          quantity: newQuantity,\r\n          _id: item._id,\r\n        };\r\n        orderService.createPurchasedProd(newData);\r\n        productSerivce.addSalesProduct(newData);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport default writingDataToDb;\r\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,4BAA4B;AACrD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,MAAMC,eAAe,GAAG,OAAOC,QAAQ,EAAEC,cAAc,KAAK;EAC1D,MAAMC,iBAAiB,GAAG,MAAMD,cAAc,CAACE,GAAG,CAAEC,IAAI,IAAK;IAC3DR,YAAY,CAACS,wBAAwB,CAACD,IAAI,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;MACxD,MAAMC,qBAAqB,GAAGD,GAAG;MACjC,IACEC,qBAAqB,KAAK,IAAI,IAC9BA,qBAAqB,KAAKC,SAAS,EACnC;QACAb,YAAY,CAACc,MAAM,CAACV,QAAQ,CAAC;QAC7BF,kBAAkB,CAACM,IAAI,EAAEA,IAAI,CAACO,QAAQ,CAAC;QACvCf,YAAY,CAACgB,mBAAmB,CAACR,IAAI,CAAC;QACtCP,cAAc,CAACgB,eAAe,CAACT,IAAI,CAAC;MACtC,CAAC,MAAM,IACLI,qBAAqB,KAAK,IAAI,IAC9BA,qBAAqB,KAAKC,SAAS,EACnC;QACAb,YAAY,CAACc,MAAM,CAACV,QAAQ,CAAC;QAC7BF,kBAAkB,CAACM,IAAI,EAAEA,IAAI,CAACO,QAAQ,CAAC;QACvC,MAAMG,WAAW,GAAGV,IAAI,CAACO,QAAQ,CAACR,GAAG,CAAC,CAACY,CAAC,EAAEC,KAAK,KAAK;UAClD,IAAIR,qBAAqB,CAACQ,KAAK,CAAC,CAACC,KAAK,GAAG,CAAC,EAAE;YAC1C,OAAO;cACL,GAAGF,CAAC;cACJE,KAAK,EAAGT,qBAAqB,CAACQ,KAAK,CAAC,CAACC,KAAK,IAAIF,CAAC,CAACE;YAClD,CAAC;UACH;UACA,OAAOF,CAAC;QACV,CAAC,CAAC;QAEF,MAAMG,OAAO,GAAG;UACdC,QAAQ,EAAEf,IAAI,CAACe,QAAQ;UACvBC,IAAI,EAAEhB,IAAI,CAACgB,IAAI;UACfC,GAAG,EAAE,CAAC,GAAGjB,IAAI,CAACiB,GAAG,CAAC;UAClBC,IAAI,EAAElB,IAAI,CAACkB,IAAI;UACfC,KAAK,EAAEnB,IAAI,CAACmB,KAAK;UACjBZ,QAAQ,EAAEG,WAAW;UACrBU,GAAG,EAAEpB,IAAI,CAACoB;QACZ,CAAC;QACD5B,YAAY,CAACgB,mBAAmB,CAACM,OAAO,CAAC;QACzCrB,cAAc,CAACgB,eAAe,CAACK,OAAO,CAAC;MACzC;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAED,eAAenB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}