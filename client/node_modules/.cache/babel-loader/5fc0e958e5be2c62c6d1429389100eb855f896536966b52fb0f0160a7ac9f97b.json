{"ast":null,"code":"import httpService from \"./http.service\";\nimport localStorageService from \"./localStorage.service\";\nconst userEndPoint = \"user/\";\nconst userService = {\n  create: async payload => {\n    const accesToken = localStorageService.getAccesToken();\n    const {\n      data\n    } = await httpService.put(`${userEndPoint}` + `${payload._id}` + `.json?auth=${accesToken}`, payload);\n    return data;\n  },\n  getCurrentUser: async () => {\n    const accesToken = localStorageService.getAccesToken();\n    const {\n      data\n    } = await httpService.get(`${userEndPoint}` + localStorageService.getUserId() + `.json?auth=${accesToken}`);\n    return data;\n  },\n  getRefreshUser: async balance => {\n    const accesToken = localStorageService.getAccesToken();\n    const {\n      data\n    } = await httpService.put(`${userEndPoint}` + localStorageService.getUserId() + `/balance` + `.json?auth=${accesToken}`, balance);\n    return data;\n  }\n};\nexport default userService;","map":{"version":3,"names":["httpService","localStorageService","userEndPoint","userService","create","payload","accesToken","getAccesToken","data","put","_id","getCurrentUser","get","getUserId","getRefreshUser","balance"],"sources":["C:/Users/Slim Shady/Desktop/project-x/client/src/services/user.service.js"],"sourcesContent":["import httpService from \"./http.service\";\r\nimport localStorageService from \"./localStorage.service\";\r\n\r\nconst userEndPoint = \"user/\";\r\n\r\nconst userService = {\r\n  create: async (payload) => {\r\n    const accesToken = localStorageService.getAccesToken();\r\n    const { data } = await httpService.put(\r\n      `${userEndPoint}` + `${payload._id}` + `.json?auth=${accesToken}`,\r\n      payload\r\n    );\r\n    return data;\r\n  },\r\n  getCurrentUser: async () => {\r\n    const accesToken = localStorageService.getAccesToken();\r\n    const { data } = await httpService.get(\r\n      `${userEndPoint}` +\r\n        localStorageService.getUserId() +\r\n        `.json?auth=${accesToken}`\r\n    );\r\n    return data;\r\n  },\r\n  getRefreshUser: async (balance) => {\r\n    const accesToken = localStorageService.getAccesToken();\r\n    const { data } = await httpService.put(\r\n      `${userEndPoint}` +\r\n        localStorageService.getUserId() +\r\n        `/balance` +\r\n        `.json?auth=${accesToken}`,\r\n      balance\r\n    );\r\n    return data;\r\n  },\r\n};\r\n\r\nexport default userService;\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AACxC,OAAOC,mBAAmB,MAAM,wBAAwB;AAExD,MAAMC,YAAY,GAAG,OAAO;AAE5B,MAAMC,WAAW,GAAG;EAClBC,MAAM,EAAE,MAAOC,OAAO,IAAK;IACzB,MAAMC,UAAU,GAAGL,mBAAmB,CAACM,aAAa,EAAE;IACtD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,WAAW,CAACS,GAAG,CACnC,GAAEP,YAAa,EAAC,GAAI,GAAEG,OAAO,CAACK,GAAI,EAAC,GAAI,cAAaJ,UAAW,EAAC,EACjED,OAAO,CACR;IACD,OAAOG,IAAI;EACb,CAAC;EACDG,cAAc,EAAE,YAAY;IAC1B,MAAML,UAAU,GAAGL,mBAAmB,CAACM,aAAa,EAAE;IACtD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,WAAW,CAACY,GAAG,CACnC,GAAEV,YAAa,EAAC,GACfD,mBAAmB,CAACY,SAAS,EAAE,GAC9B,cAAaP,UAAW,EAAC,CAC7B;IACD,OAAOE,IAAI;EACb,CAAC;EACDM,cAAc,EAAE,MAAOC,OAAO,IAAK;IACjC,MAAMT,UAAU,GAAGL,mBAAmB,CAACM,aAAa,EAAE;IACtD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,WAAW,CAACS,GAAG,CACnC,GAAEP,YAAa,EAAC,GACfD,mBAAmB,CAACY,SAAS,EAAE,GAC9B,UAAS,GACT,cAAaP,UAAW,EAAC,EAC5BS,OAAO,CACR;IACD,OAAOP,IAAI;EACb;AACF,CAAC;AAED,eAAeL,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}